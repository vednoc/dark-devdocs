/* ==UserStyle==
@name         Dark DevDocs
@description  A customizable theme for DevDocs.
@namespace    github.com/vednoc/dark-devdocs
@author       vednoc
@version      0.1.0
@homepageURL  https://github.com/vednoc/dark-devdocs
@supportURL   https://github.com/vednoc/dark-devdocs/issues
@updateURL    https://gitlab.com/vednoc/dark-devdocs/raw/master/dd.user.styl
@preprocessor stylus

@var text b_radius "Custom border radius" 4px
@var text ui_font "Custom UI font" "'custom_font', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', Arial, sans-serif"
@var text mono_font "Custom Mono font" "'custom_font', 'SFMono-Regular', 'Consolas', 'Liberation Mono', Menlo, Courier, monospace"
@var text mono_size "Custom Mono font size" 1em
@var text max_width "Max width for content" 100%
@var checkbox invert_ic "Icons: Invert language logos" 1
@var text fade_img "Media: Set default opacity" 1

@var color dark    "Dark color.   " #222222
@var color darker  "Darker color. " #2f2f2f
@var color light   "Light color.  " #d1d1d1
@var color lighter "Lighter color." #c9c9c9
@var color icon    "Icon color.   " #e1e1e1
@var color accent  "Accent color. " #7289da
@var color yellow  "Yellow color. " #f0c674
@var color orange  "Orange color. " #de935f
@var color red     "Red color.    " #a54242
@var color magenta "Magenta color." #b294bb
@var color violet  "Violet color. " #85678f
@var color blue    "Blue color.   " #5f819d
@var color cyan    "Cyan color.   " #5e8d87
@var color green   "Green color.  " #8c9440
@var color white   "White color.  " #ffffff
@var color shadow  "Shadow color. " #00000020

==/UserStyle== */

@-moz-document domain('devdocs.io') {

    :root {
        --dark    : dark;
        --darker  : darker;
        --light   : light;
        --lighter : lighter;
        --accent  : accent;
        --shadow  : shadow;
        --yellow  : yellow;
        --orange  : orange;
        --red     : red;
        --magenta : magenta;
        --violet  : violet;
        --blue    : blue;
        --cyan    : cyan;
        --green   : green;
        --white   : white;
        --t       : transparent;

        --width     : max_width;
        --radius    : b_radius;
        --ui-font   : ui_font;
        --mono-font : mono_font;
        --mono-size : mono_size;

        --media-opacity: fade_img;

        scrollbar-color : var(--darker) var(--dark);
    }

    // * Use stylus-lang variables with CSS variables.
    $dark    = var(--dark);
    $darker  = var(--darker);
    $light   = var(--light);
    $lighter = var(--lighter);
    $accent  = var(--accent);
    $shadow  = var(--shadow);
    $yellow  = var(--yellow);
    $orange  = var(--orange);
    $red     = var(--red);
    $magenta = var(--magenta);
    $violet  = var(--violet);
    $blue    = var(--blue);
    $cyan    = var(--cyan);
    $green   = var(--green);
    $white   = var(--white);
    $t       = var(--t);
    $r       = var(--radius);

    // * Mixins.
    radius() { border-radius: arguments }
    c(x, y = 0, z = 0, xi = 1, yi = 1, zi = 1) {
        if x is a 'call' {            color: xi is 0 ? x : x !important }
        if y is a 'call' {     border-color: yi is 0 ? y : y !important }
        if z is a 'call' { background-color: zi is 0 ? z : z !important }
    }


    // * Reset.
    body {
        c: $lighter 0 $dark;

        * { scrollbar-width: thin }
        ::selection { c: $white 0 $accent }
        ::-moz-selection { c: $white 0 $accent }

        // * Feature -> Custom UI font.
        font-family: var(--ui-font);

        table {
            radius: $r !important;
            c: 0 $darker $dark;
            thead {
                tr th {
                    c: $light $darker $darker;
                    ../ tr:first-child > th:first-child {
                        radius: calc(var(--radius) - 2px) 0 0 0;
                    }
                    ../ tr:first-child > th:last-child {
                        radius: 0 calc(var(--radius) - 2px) 0 0;
                    }
                }
            }
            tbody {
                tr th {
                    c: $light $darker $darker;
                    ../ tr:first-child > th:first-child {
                        radius: calc(var(--radius) - 2px) 0 0 0;
                    }
                    ../ tr:first-child > th:last-child {
                        radius: 0 calc(var(--radius) - 2px) 0 0;
                    }
                }
                tr td { c: $lighter $darker $t }
                code { c: $light 0 $darker }
                a { c: $accent }
            }
        }

        small { c: $lighter }
        code {
            &._label { c: $light 0 $darker }
        }

        pre {
            radius: $r;
            c: $light $darker $dark;
            box-shadow: 0 2px 4px 0 $shadow;

            // * Feature -> Custom Mono font.
            &, ../ code, samp { font-family: var(--mono-font) }

            // * Feature -> Custom font size.
            &, ../ code, samp { font-size: var(--mono-size) }

            &[data-language] {
                font-size: var(--mono-size);
                .token, .comment, .punctuation { c: $lighter }
                .function { c: $red }
                .number { c: $violet }
                .operator, .entity, .url { c: $yellow }
                .atrule, .attr-value, .keyword { c: $blue }
                .property, .tag, .boolean, .constant, .symbol, .deleted { c: $orange }
                .selector, .attr-name, .string, .char, .builtin, .inserted { c: $green }
                .symbol.atom { c: $violet }
            }

            // Clipboard button.
            ._pre-clip {
                opacity: 0;
                display: block;
                transition: 0.15s ease;
                &::before { c: $light }
                > svg { fill: $light }
                ../:hover ._pre-clip { opacity: 0.5 }
            }
        }

        // * Sidebar -> Overflowing list item.
        ._list-item.clone {
            c: $light 0 $darker;
            box-shadow: none;
        }

        // Main -> Landing page.
        ._intro {
            &-message {
                radius: $r;
                c: $light $darker $dark;
                box-shadow: 0 2px 4px 0 $shadow;
                a[href] { c: $accent }
            }
            iframe { filter: invert(1) hue-rotate(180deg) }
        }

        // Settings -> Header.
        ._settings ._header { c: $light $darker $dark }

        // Button groups.
        ._docs-links {
            radius: $r;
            c: $light $darker $dark;
            ._show ~ ._show { c: 0 $darker 0 }
        }

        // Feature -> Invert icon colors.
        if ( invert_ic == 1 ) {
            ._list-item::before, ._docs-name::before, ._path-item::before {
                filter: invert(1) grayscale(100%) !important;
            }
        }
    }


    // * Global -> Buttons.
    ._btn {
        transition: 0.15s ease;
        c: $light $darker $dark 0 0 0;

        &:hover { c: 0 0 $darker 0 0 0 }

        &-link {
            c: $light;
            &._reset-btn { c: $red }
        }
    }


    // * Sidebar -> Search.
    ._header[role='banner'] {
        c: 0 $darker $dark;

        ._search {
            &-tag { c: $light 0 $darker }

            &-input {
                radius: $r;
                c: $light $darker $dark;
                box-shadow: 0 3px 2px inset $shadow;
                &:focus {
                    c: 0 $accent;
                    box-shadow: 0 0 1px $accent;
                }
            }

            &-clear {
                transition: 0.15s ease;
                svg { fill: $lighter }
            }
        }

        // Menu.
        ._menu {
            radius: $r;
            c: 0 $darker $dark;
            box-shadow: 0 2px 4px $shadow;
            h1 {
                c: $light $darker $t;
                a { c: $light }
            }
            &-link {
                c: $lighter;
                transition: 0.15s ease;
                &:hover { c: $light 0 $darker }
            }
        }
    }

    // * Sidebar -> Core.
    ._sidebar[tabindex='-1'] {
        c: $lighter $green $dark;

        a { c: $accent }

        ._list {
            box-shadow: inset -1px 0 $darker;

            &-title {
                c: $lighter;
                svg { fill: $lighter }
                &.open-title { c: $light }
            }

            &-item {
                c: $light 0 $t;
                box-shadow: inset -1px 0 $darker;
                &:hover { c : 0 0 $darker }

                // List states.
                ../ .focus { c: $light 0 $darker }
                ../ .active { c: $white 0 $accent }

                // Highlight currently open list.
                ../ > div > ._list-dir.open:not(._icon-c) + ._list-sub {
                    box-shadow: inset 8px 0 $darker, inset 0 0 0 1px $darker;
                }

                ._list-arrow {
                    fill: $light;
                    ../.open ._list-arrow { opacity: 1 }
                }

                // Version colors.
                ._list-count { color: inherit }

                // Disabled list items.
                &._list-disabled {
                    c: $lighter;
                    ^[1]-enable { c: $accent }
                }
            }

            &-picker-head {
                background: linear-gradient(0deg, $t, $dark 75%) !important;
                span { c: $light }
            }

            &-note { c: $lighter }

            &-pagelink { c: $accent }
        }
    }


    // * Main -> Content.
    ._container[role='document'] {
        // * Feature -> Max width for content.
        > main._content > div {
            margin: 0 auto;
            max-width: var(--width);
        }

        // 404 error.
        ._error {
            &-text { c: $lighter }
        }

        // Links.
        a {
            &[href] {
                c: $accent 0 0 0;
                code {
                    &.inline { color: inherit !important }
                    // Reset code within links.
                    ../ > code {
                        padding: 0;
                        font-size: 1em;
                        font-family: var(--ui-font);
                        c: $accent 0 $t;
                    }
                }
            }
            // External links.
            &[href^='http:'], &[href^='https:'] {
                &::after {
                    c: $light;
                    content: '\1F5D7';
                    width: unset;
                    height: unset;
                    font-size: 1em;
                    background: none;
                    margin: 0 0 0 2px;
                    display: inline-flex;
                }
            }
        }

        p {
            // Page links.
            &._links {
                ._links-link { c: $accent 0 $dark }
            }
            > code { c: $light 0 $darker }
        }

        h1 {
            code { c: $light }
            &::after { c: 0 0 $darker }
        }
        // Class-less headers.
        for i in 2..3 {
            h{i}:not([class]) {
                radius: $r;
                c: $light $darker $darker;
            }
        }
        for i in 4..6 {
            h{i}:not([class]) {
                c: $light 0 0;
            }
        }

        * {
            // Reset headings.
            &[class*='impl'] {
                radius: $r;
                c: $light $blue $dark;
                code { c: 0 0 $t }
            }
            &[class*='section-head']:not(h1):not(h4) {
                &, ~ h2:not([class]) {
                    radius: $r;
                    c: $light $darker $darker;
                }
            }
            &[class*='block-heading'] {
                radius: $r;
                c: $light $darker $dark;
            }
            &[class*='detail-header'], &[class=''] {
                // padding: 8px;
                radius: $r;
                c: $blue $blue $darker;
            }
            h4[id][class] {
              radius: $r;
              c: $blue $darker $t;
            }
            .type, .method {
                radius: $r;
                c: $light $darker $dark;
                code { c: 0 0 $t }
            }
            span.unstable { c: $white $orange $orange }
            .superclass {
              > a, > strong { c: 0 0 $darker }
            }
            // Reset code blocks.
            > code, > samp {
                radius: $r;
                c: $light 0 $darker;
                &:not(._shortcut-code) { padding: 2px 4px }
            }
            // Deprecation notice.
            .stab { c: $light 0 $darker }
        }

        blockquote, .important-traits, .tip, div.information {
            radius: $r;
            c: $light $orange $darker;
        }
        .note {
            radius: $r;
            c: $light $green $darker;
        }

        // Callouts.
        .doc-box {
            radius: $r;
            &.doc-info { c: $light $blue $dark }
            &.doc-notice { c: $light $yellow $dark }
        }

        ._toc {
            radius: $r;
            c: $light $darker $dark;
        }

        ._shortcut {
            &-code { c: $light 0 $darker }
        }

        ._note {
            radius: $r;
            &:not([id]) { c: $light $orange $dark }
            ._label { c: $light 0 $dark }
            &-green { c: $green $green $darker }
        }

        // * Feature -> Set default media opacity.
        > [role='main'] {
            img, video, iframe {
                transition: 0.15s ease;
                &:not(:hover) { filter: opacity(var(--media-opacity)) }
            }
        }
    }


    // * Main -> Core.
    ._app[role='application'] {

        // Notice.
        ._notice {
            c: $lighter 0 $dark;
            box-shadow: 0 -1px 0 0 $darker;
            a[href] { c: $accent }
            code { c: $light }
        }

        // Breadcrumbs.
        ._path {
            c: 0 0 $dark;
            box-shadow: inset 0 1px $darker;
            span:last-child { c: $light }
            &-arrow { fill: $lighter }
            &-item { c: $lighter }
        }

        // Resize the sidebar.
        > ._resizer {
            top: 0;
            bottom: 0;
            width: 8px;
            margin-left: -8px;
            c: 0 0 $darker;
            opacity: 0;
        }

        // Credits.
        ._attribution {
            &-p {
                radius: $r;
                c: $light 0 $darker;
            }
            &-link { c: $accent }
        }

        // News page.
        ._news {
            &-row { c: $lighter }
            &-title { c: $light }
        }
    }
}
